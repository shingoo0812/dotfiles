# ALIASES ---------------------------------------------------------
alias d="docker"
alias dc="docker-compose"
alias dkill="pgrep \"Docker\" | xargs kill -9"
alias dcc="docker builder prune -f"

alias v='nvim -w ~/.vimlog "$@"'
alias vi='nvim '-w ~/.vimlog "$@"'
alias vim='nvim '-w ~/.vimlog "$@"'

alias ta='tmux attach -t'

alias ll='ls -la'
alias la='ls -A'
alias l='ls -CF'

alias c='clear'
alias s='source ~/.zshrc'
alias trim="awk '{\$1=\$1;print}'"

# APT -----------------------------------------------------
alias ap='sudo apt -y update && sudo apt -y upgrade' 

# pbcopy for tmux -----------------------------------------------------
alias pbcopy='xsel --clipboard --input'

# GIT alias ALIASES -----------------------------------------------------
alias gc='git commit'

alias gts='git status'
alias gco='git checkout'
alias ga='git add'
alias gba='git branch --all'
alias gbd='git branch -D'
alias gcp='git cherry-pick'
alias gd='git diff -w'
alias gds='git diff -w --staged'
alias grs='git restore --staged'

#alias gst='git rev-parse --git-dir > /dev/null 2>&1 && git status || exa'
alias gst='git rev-parse --git-dir > /dev/null 2>&1 && git status || ls -la'
alias gu='git reset --soft HEAD~1'
alias gpr='git remote prune origin'
alias ff='gpr && git ull --ff-only'
alias grd='git fetch origin && git rebase origin/master'
alias gbb='git-switchbranch'
alias gbf='git branch | head -1 | xargs' # top branch
alias gl=pretty_git_log
alias gla=pretty_git_log_all
alias git-current-branch="git branch | grep \* | cut -d ' ' -f2"
alias grc='git rebase --continue'
alias gra='git rebase --abort'
alias gec='git status | grep "both modified:" | cut -d ":" -f 2 | trim | xargs nvim -'
alias gcan='gc --amend --no-edit'

alias gp="git push -u 2>&1 | tee >(cat) | grep \"pull/new\" | awk '{print \$2}' | xargs open"
alias gpf='git push --force-with-lease'

alias gbdd='git-branch-utils -d'
alias gbuu='git-branch-utils -u'
alias gbrr='git-branch-utils -r -b develop'
alias gg='git branch | fzf | xargs git checkout'
alias gup='git branch --set-upstream-to=origin/$(git-current-branch) $(git-current-branch)'

alias gnext='git log --ancestry-path --format=%H ${commit}..master | tail -1 | xargs git checkout'
alias gprev='git checkout HEAD^'

# Utility ALIASES -----------------------------------------------------
alias cdv='cd ~/dotfiles/linux/nvim'
alias cdd='cd ~/dotfiles'
alias ..="cd .."
alias ...="cd .. & cd .."

# FUNCTIONS ------------------------------------------------------------------
function take() {
	mkdir -p $1
	cd $1
}

note() {
	echo "date: $(date)" >> $HOME/drafts.txt
	echo "$@" >> $HOME/drafts.txt
	echo "" >> $HOME/drafts.txt
}

dclear() {
	docker ps -a -q | xargs docker kill -f
	docker ps -a -q | xargs docker rm -f
	docker images -a -q | xargs docker image rm -f
	#docker images | grep "api\|none" | awk '{print $3}' | xargs docker rmi -f
	docker volume prune -f
}

renamef() {
  local target_string=$1    
  local replacement=$2     
  for file in *; do
    new_file=$(echo "$file" | sed -E "s/$target_string/$replacement/")
    
    if [[ "$new_file" != "$file" ]]; then
      mv "$file" "$new_file"
      echo "Renamed: $file -> $new_file"
    fi
  done
}

adds() {
local position=$1        # specify to prefix or suffix 
local regex=$2           # specify to regex word to translating files 
local add_string=$3      # specify to add string

for file in *; do
  if [[ "$file" =~ $regex ]]; then
    if [[ "$position" == "-p" ]]; then
      new_file="$add_string$file"  # Add prefix
    elif [[ "$position" == "-s" ]]; then
        new_file="${file%.*}$add_string.${file##*.}"  # Add suffix(preserve extension) 
    else
      echo "Error: First argument must be '-p:prefix' or '-s:suffix'."
      return 1
    fi
    
    # Execute only if file name is changed
    if [[ "$new_file" != "$file" ]]; then
      mv "$file" "$new_file"
      echo "Renamed: $file -> $new_file"
    fi
  fi
  done
}

manv() {
  if [ -z "$1" ]; then
    echo "Usage: man_view <command>"
    return 1
  fi

  man "$1" | col -b | nvim -
}

alias docker-clear=dclear



